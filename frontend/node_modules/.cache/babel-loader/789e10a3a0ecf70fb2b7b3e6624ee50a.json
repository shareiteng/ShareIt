{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Timepicker = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _debounce = require('lodash/debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nvar _radium = require('radium');\n\nvar _radium2 = _interopRequireDefault(_radium);\n\nvar _parseTime = require('../helpers/parse-time');\n\nvar _parseTime2 = _interopRequireDefault(_parseTime);\n\nvar _composeTime = require('../helpers/compose-time');\n\nvar _composeTime2 = _interopRequireDefault(_composeTime);\n\nvar _ClockWrapper = require('./ClockWrapper');\n\nvar _ClockWrapper2 = _interopRequireDefault(_ClockWrapper);\n\nvar _Time = require('./Time');\n\nvar _Time2 = _interopRequireDefault(_Time);\n\nvar _config = require('../helpers/config');\n\nvar defaultConfig = _interopRequireWildcard(_config);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Timepicker = exports.Timepicker = function (_React$Component) {\n  _inherits(Timepicker, _React$Component);\n\n  function Timepicker(props) {\n    _classCallCheck(this, Timepicker);\n\n    var _this = _possibleConstructorReturn(this, (Timepicker.__proto__ || Object.getPrototypeOf(Timepicker)).call(this, props));\n\n    _this.state = _extends({}, (0, _parseTime2.default)(props.time), {\n      unit: 'hour' // override any default styles\n\n    });\n    var config = Object.assign({}, defaultConfig, props.config);\n    _this.config = config;\n    _this.changeHour = _this.handleTimeChange.bind(_this, 'hour');\n    _this.changeMinute = _this.handleTimeChange.bind(_this, 'minute');\n    _this.changeUnit = _this.changeUnit.bind(_this);\n    _this.changeMeridiem = _this.handleMeridiemChange.bind(_this);\n    _this.doneClickWithEvent = _this.doneClickWithEvent.bind(_this);\n    _this.timeChangeHandler = null;\n\n    if (typeof props.onChange === 'function') {\n      _this.timeChangeHandler = (0, _debounce2.default)(function () {\n        _this.props.onChange(_this.getTime());\n      }, 80);\n    }\n\n    return _this;\n  }\n\n  _createClass(Timepicker, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.time) {\n        this.setState((0, _parseTime2.default)(nextProps.time));\n      }\n    }\n  }, {\n    key: 'getTime',\n    value: function getTime() {\n      var state = this.state;\n      return (0, _composeTime2.default)(state.hour, state.minute, state.meridiem);\n    }\n  }, {\n    key: 'handleTimeChange',\n    value: function handleTimeChange(unit, val, canChangeUnit) {\n      val = parseInt(val, 10);\n\n      if (isNaN(val)) {\n        return;\n      }\n\n      if (unit === 'hour' && val === 0) {\n        val = 12;\n      } else if (unit === 'minute' && val === 60) {\n        val = 0;\n      }\n\n      this.setState(_defineProperty({}, unit, val), this.timeChangeHandler); // update time on parent\n\n      var props = this.props;\n\n      if (canChangeUnit && unit === 'hour' && props.switchToMinuteOnHourSelect) {\n        this.changeUnit('minute');\n      } else if (canChangeUnit && unit === 'minute' && props.closeOnMinuteSelect) {\n        props.onDoneClick && props.onDoneClick(this.getTime(), null);\n      }\n    }\n  }, {\n    key: 'handleMeridiemChange',\n    value: function handleMeridiemChange(val) {\n      if (val !== this.state.meridiem) {\n        this.setState({\n          meridiem: val\n        }, this.timeChangeHandler); // update on parent\n      }\n    }\n  }, {\n    key: 'doneClickWithEvent',\n    value: function doneClickWithEvent(e) {\n      this.props.onDoneClick(this.getTime(), e);\n    }\n  }, {\n    key: 'changeUnit',\n    value: function changeUnit(newUnit) {\n      var currentUnit = this.state.unit;\n\n      if (currentUnit === newUnit) {\n        return;\n      }\n\n      this.setState({\n        unit: newUnit\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var config = this.config;\n      var styles = {\n        timePicker: {\n          fontFamily: config.FONT_FAMILY,\n          background: config.TIMEPICKER_BACKGROUND,\n          borderRadius: '3px',\n          display: 'inline-block',\n          // boxShadow: '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)',\n          boxShadow: '0 3px 6px rgba(0,0,0,0.13), 0 3px 6px rgba(0,0,0,0.19)',\n          // bigger\n          width: '260px',\n          position: 'relative',\n          userSelect: 'none'\n        },\n        doneButton: {\n          display: 'block',\n          color: config.DONE_BUTTON_COLOR,\n          textTransform: 'uppercase',\n          borderTop: '1px solid ' + config.DONE_BUTTON_BORDER_COLOR,\n          textAlign: 'center',\n          cursor: 'pointer',\n          padding: '16px 0',\n          fontSize: '13px',\n          letterSpacing: '0.5px',\n          lineHeight: 'normal',\n          fontWeight: 500\n        }\n      };\n      var state = this.state;\n      return _react2.default.createElement(_radium.StyleRoot, {\n        style: styles.timePicker,\n        className: 'react-timekeeper'\n      }, _react2.default.createElement('style', null, '\\n\\t\\t\\t\\t\\t.react-timekeeper {\\n\\t\\t\\t\\t\\t\\t-webkit-tap-highlight-color: transparent;\\n\\t\\t\\t\\t\\t\\t-webkit-font-smoothing: antialiased;\\n\\t\\t\\t\\t\\t\\tfont-smoothing: antialiased;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t.react-timekeeper-button-reset {\\n\\t\\t\\t\\t\\t\\tbackground: 0;\\n\\t\\t\\t\\t\\t\\tborder: 0;\\n\\t\\t\\t\\t\\t\\tbox-shadow: none;\\n\\t\\t\\t\\t\\t\\ttext-shadow: none;\\n\\t\\t\\t\\t\\t\\t-webkit-appearance: none;\\n\\t\\t\\t\\t\\t\\t-moz-appearance: none;\\n\\t\\t\\t\\t\\t\\tcursor: pointer;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t.react-timekeeper-button-reset:hover, .react-timekeeper-button-reset:focus, .react-timekeeper-button-reset:active {\\n\\t\\t\\t\\t\\t\\toutline: none;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t.react-timekeeper-button-reset::-moz-focus-inner {\\n\\t\\t\\t\\t\\t\\tborder: 0;\\n\\t\\t\\t\\t\\t\\tpadding: 0;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t.react-timekeeper-noscroll {\\n\\t\\t\\t\\t\\t\\toverflow: hidden;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t.react-timekeeper-scrollbar-measure {\\n\\t\\t\\t\\t\\t\\twidth: 100px;\\n\\t\\t\\t\\t\\t\\theight: 100px;\\n\\t\\t\\t\\t\\t\\toverflow: scroll;\\n\\t\\t\\t\\t\\t\\tposition: absolute;\\n\\t\\t\\t\\t\\t\\ttop: -9999px;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t'), _react2.default.createElement(_Time2.default, {\n        config: this.config,\n        unit: state.unit,\n        hour: state.hour,\n        minute: state.minute,\n        meridiem: state.meridiem,\n        changeMeridiem: this.changeMeridiem,\n        changeHour: this.changeHour,\n        changeMinute: this.changeMinute,\n        changeUnit: this.changeUnit\n      }), _react2.default.createElement(_ClockWrapper2.default, {\n        config: this.config,\n        unit: state.unit,\n        hour: state.hour,\n        minute: state.minute,\n        meridiem: state.meridiem,\n        changeHour: this.changeHour,\n        changeMinute: this.changeMinute,\n        changeMeridiem: this.changeMeridiem\n      }), this.props.onDoneClick && _react2.default.createElement('span', {\n        style: styles.doneButton,\n        onClick: this.doneClickWithEvent\n      }, 'Done'));\n    }\n  }]);\n\n  return Timepicker;\n}(_react2.default.Component);\n\nTimepicker.propTypes = {\n  time: _propTypes2.default.string,\n  onChange: _propTypes2.default.func,\n  onDoneClick: _propTypes2.default.func,\n  switchToMinuteOnHourSelect: _propTypes2.default.bool,\n  closeOnMinuteSelect: _propTypes2.default.bool,\n  config: _propTypes2.default.object\n};\nexports.default = (0, _radium2.default)(Timepicker);","map":null,"metadata":{},"sourceType":"script"}