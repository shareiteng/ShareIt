{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexports.default = parseTime;\nvar TIME_PARSE_MERIDIEM = new RegExp(/^(\\d{1,2}?):(\\d{2}?)\\s?(am|pm)$/i);\nvar TIME_PARSE_24 = new RegExp(/^(\\d{1,2}?):(\\d{2}?)$/);\nvar defaultTime = {\n  hour: 12,\n  minute: 0,\n  meridiem: 'pm' // parse and normalize time to 12h format with meridiem\n\n};\n\nfunction parseTime(time) {\n  time = time || defaultTime;\n  var hour = void 0;\n  var minute = void 0;\n  var meridiem = 'am';\n\n  if (typeof time === 'string') {\n    // if is string\n    var match = time.match(TIME_PARSE_MERIDIEM);\n\n    if (match) {\n      hour = parseInt(match[1], 10);\n      minute = parseInt(match[2], 10);\n      meridiem = match[3].toLowerCase();\n    } else {\n      match = time.match(TIME_PARSE_24);\n\n      if (!match) {\n        throw new Error('Could not parse time (string)');\n      }\n\n      minute = parseInt(match[2], 10);\n      var h = parseInt(match[1], 10);\n\n      var _handle = handle24(h);\n\n      hour = _handle.hour;\n      meridiem = _handle.meridiem;\n    }\n\n    if (hour === 0) {\n      // if 0:32, should be 12:32 am\n      hour = 12;\n    }\n  } else if ((typeof time === 'undefined' ? 'undefined' : _typeof(time)) === 'object') {\n    // if is object\n    if (!Number.isInteger(time.hour) || !Number.isInteger(time.minute)) {\n      throw new Error('Time and minute must both be valid integers');\n    }\n\n    minute = time.minute;\n\n    if (time.meridiem) {\n      hour = handle12(time.hour);\n      meridiem = time.meridiem;\n    } else {\n      var _handle2 = handle24(time.hour);\n\n      hour = _handle2.hour;\n      meridiem = _handle2.meridiem;\n    }\n  }\n\n  if (hour > 12 || minute > 60) {\n    throw new Error('Time out of range');\n  }\n\n  return {\n    hour: hour,\n    minute: minute,\n    meridiem: meridiem\n  };\n}\n\nfunction handle12(hour) {\n  if (hour > 12) {\n    throw new Error('Hour out of range (' + hour + ' > 12)');\n  }\n\n  if (hour === 0) {\n    hour = 12;\n  }\n\n  return hour;\n}\n\nfunction handle24(hour) {\n  var meridiem = 'am';\n\n  if (hour > 24) {\n    throw new Error('Hour out of range (> 24)');\n  }\n\n  if (hour === 24) {\n    hour = 12;\n  } else if (hour > 11) {\n    meridiem = 'pm';\n\n    if (hour > 12) {\n      hour = hour % 12;\n    }\n  }\n\n  return {\n    hour: hour,\n    meridiem: meridiem\n  };\n}","map":null,"metadata":{},"sourceType":"script"}