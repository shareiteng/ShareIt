{"ast":null,"code":"addEventListener.removeEventListener = removeEventListener;\naddEventListener.addEventListener = addEventListener;\nmodule.exports = addEventListener;\nvar Events = null;\n\nfunction addEventListener(el, eventName, listener, useCapture) {\n  Events = Events || (document.addEventListener ? {\n    add: stdAttach,\n    rm: stdDetach\n  } : {\n    add: oldIEAttach,\n    rm: oldIEDetach\n  });\n  return Events.add(el, eventName, listener, useCapture);\n}\n\nfunction removeEventListener(el, eventName, listener, useCapture) {\n  Events = Events || (document.addEventListener ? {\n    add: stdAttach,\n    rm: stdDetach\n  } : {\n    add: oldIEAttach,\n    rm: oldIEDetach\n  });\n  return Events.rm(el, eventName, listener, useCapture);\n}\n\nfunction stdAttach(el, eventName, listener, useCapture) {\n  el.addEventListener(eventName, listener, useCapture);\n}\n\nfunction stdDetach(el, eventName, listener, useCapture) {\n  el.removeEventListener(eventName, listener, useCapture);\n}\n\nfunction oldIEAttach(el, eventName, listener, useCapture) {\n  if (useCapture) {\n    throw new Error('cannot useCapture in oldIE');\n  }\n\n  el.attachEvent('on' + eventName, listener);\n}\n\nfunction oldIEDetach(el, eventName, listener, useCapture) {\n  el.detachEvent('on' + eventName, listener);\n}","map":null,"metadata":{},"sourceType":"script"}